[1mdiff --git a/.github/workflows/pipeline-backend.yml b/.github/workflows/pipeline-backend.yml[m
[1mindex b90d407..ba24223 100644[m
[1m--- a/.github/workflows/pipeline-backend.yml[m
[1m+++ b/.github/workflows/pipeline-backend.yml[m
[36m@@ -128,20 +128,6 @@[m [mjobs:[m
 [m
 [m
 [m
[31m-      #changed for arm[m
[31m-#      - name: Build & Push Docker image[m
[31m-#        uses: docker/build-push-action@v5[m
[31m-#        with:[m
[31m-#          context: readcircle[m
[31m-#          file: docker/backend/Dockerfile[m
[31m-#          push: true[m
[31m-#          platforms: linux/amd64[m
[31m-#          tags: |[m
[31m-#            ${{ secrets.DOCKERHUB_USERNAME }}/bsn-api:${{ steps.extract_version.outputs.VERSION }}[m
[31m-#            ${{ secrets.DOCKERHUB_USERNAME }}/bsn-api:latest[m
[31m-#          build-args: |[m
[31m-#            PROFILE=dev[m
[31m-#            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}[m
 [m
   deploy:[m
     runs-on: ubuntu-latest[m
[36m@@ -157,7 +143,7 @@[m [mjobs:[m
           mkdir -p ~/.ssh[m
           echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa[m
           chmod 600 ~/.ssh/id_rsa[m
[31m-          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "echo âœ… Connected successfully"[m
[32m+[m[32m          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "echo  Connected successfully"[m
 [m
       - name: Create deployment folder[m
         run: |[m
[1mdiff --git a/.github/workflows/pipeline-frontend.yml b/.github/workflows/pipeline-frontend.yml[m
[1mindex 2bee8fb..28ea6a4 100644[m
[1m--- a/.github/workflows/pipeline-frontend.yml[m
[1m+++ b/.github/workflows/pipeline-frontend.yml[m
[36m@@ -34,15 +34,6 @@[m [mjobs:[m
         with:[m
           username: ${{ secrets.DOCKERHUB_USERNAME }}[m
           password: ${{ secrets.DOCKERHUB_TOKEN }}[m
[31m-      #changed for arm vps[m
[31m-#      - name: Build & Push to DockerHub[m
[31m-#        uses: docker/build-push-action@v5[m
[31m-#        with:[m
[31m-#          context: readcircle-ui[m
[31m-#          file: docker/frontend/Dockerfile[m
[31m-#          push: true[m
[31m-#          platforms: linux/amd64[m
[31m-#          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bsn-ui:latest,${{ secrets.DOCKERHUB_USERNAME }}/bsn-ui:${{ steps.extract_version.outputs.VERSION }}[m
 [m
       - name: Build & Push to DockerHub[m
         uses: docker/build-push-action@v5[m
[36m@@ -85,17 +76,3 @@[m [mjobs:[m
           sudo docker compose -f docker-compose.yml up -d[m
           EOF[m
 [m
[31m-#  health-check:[m
[31m-#    name: UI Health Check[m
[31m-#    runs-on: ubuntu-latest[m
[31m-#    needs: [deploy][m
[31m-#    steps:[m
[31m-#      - name: Check the docker container health status[m
[31m-#        run: |[m
[31m-#          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "[m
[31m-#          if ! docker ps -a | grep bsn-ui; then[m
[31m-#            echo 'ðŸš¨ UI container is not running'[m
[31m-#            exit 1[m
[31m-#          else[m
[31m-#            echo 'âœ… UI container is running'[m
[31m-#          fi"[m
[1mdiff --git a/docker-compose.yml b/docker-compose.yml[m
[1mindex 8c7b8c9..adc5aed 100644[m
[1m--- a/docker-compose.yml[m
[1m+++ b/docker-compose.yml[m
[36m@@ -14,12 +14,7 @@[m [mservices:[m
     networks:[m
       - spring-demo[m
     restart: unless-stopped[m
[31m-#  mail-dev:[m
[31m-#    container_name: mail-dev-bsn[m
[31m-#    image: maildev/maildev[m
[31m-#    ports:[m
[31m-#      - 1080:1080[m
[31m-#      - 1025:1025[m
[32m+[m
   bsn-api:[m
     container_name: bsn-api[m
     image: sujalpanwar/bsn-api:latest[m
[36m@@ -47,6 +42,7 @@[m [mservices:[m
       - spring-demo[m
     depends_on:[m
       - bsn-api[m
[32m+[m[32m      -[m
   keycloak:[m
     image: quay.io/keycloak/keycloak:24.0.1[m
     container_name: keycloak[m
[36m@@ -71,52 +67,7 @@[m [mservices:[m
       - spring-demo[m
     depends_on:[m
       - postgres[m
[31m-#  keycloak:[m
[31m-#    image: quay.io/keycloak/keycloak:24.0.1[m
[31m-#    container_name: keycloak[m
[31m-#    platform: linux/arm64[m
[31m-#    command:[m
[31m-#      - start-dev[m
[31m-#      - --http-enabled=true[m
[31m-#      - --https-port=0[m
[31m-#      - --import-realm[m
[31m-#    environment:[m
[31m-#      KEYCLOAK_ADMIN: admin[m
[31m-#      KEYCLOAK_ADMIN_PASSWORD: admin[m
[31m-#      KC_HOSTNAME_STRICT: "false"[m
[31m-#      KC_HOSTNAME_STRICT_BACKCHANNEL: "false"[m
[31m-#    volumes:[m
[31m-#      - /home/ubuntu/ReadCircle.json:/opt/keycloak/data/import/ReadCircle.json[m
[31m-#    ports:[m
[31m-#      - "9090:8080"[m
[31m-[m
[31m-    #  keycloak:[m
[31m-#    container_name: keycloak-bsn[m
[31m-#    image: quay.io/keycloak/keycloak:24.0.2[m
[31m-#    ports:[m
[31m-#      - 9090:8080[m
[31m-#    environment:[m
[31m-#      KEYCLOAK_ADMIN: admin[m
[31m-#      KEYCLOAK_ADMIN_PASSWORD: admin[m
[31m-#    networks:[m
[31m-#      - spring-demo[m
[31m-#    command:[m
[31m-#      - "start-dev"[m
 [m
[31m-#  keycloak:[m
[31m-#    image: quay.io/keycloak/keycloak:24.0.1[m
[31m-#    container_name: keycloak[m
[31m-#    platform: linux/arm64[m
[31m-#    command:[m
[31m-#      - start-dev[m
[31m-#      - --import-realm[m
[31m-#    environment:[m
[31m-#      KEYCLOAK_ADMIN: admin[m
[31m-#      KEYCLOAK_ADMIN_PASSWORD: admin[m
[31m-#    volumes:[m
[31m-#      - /home/ubuntu/ReadCircle.json:/opt/keycloak/data/import/ReadCircle.json[m
[31m-#    ports:[m
[31m-#      - "9090:8080"[m
 networks:[m
   spring-demo:[m
     driver: bridge[m
[36m@@ -126,5 +77,3 @@[m [mnetworks:[m
 volumes:[m
   postgres:[m
     driver: local[m
[31m-#  keycloak:[m
[31m-#    driver: local[m
\ No newline at end of file[m
[1mdiff --git a/docker/frontend/Dockerfile b/docker/frontend/Dockerfile[m
[1mindex e3e799f..93ba7ec 100644[m
[1m--- a/docker/frontend/Dockerfile[m
[1m+++ b/docker/frontend/Dockerfile[m
[36m@@ -1,23 +1,3 @@[m
[31m-##FROM node:16 as build-stage[m
[31m-#FROM node:20 as build-stage  # LTS and fully ARM compatible[m
[31m-#WORKDIR /app[m
[31m-#[m
[31m-#COPY package*.json ./[m
[31m-#[m
[31m-#RUN npm install[m
[31m-#[m
[31m-#COPY . .[m
[31m-#[m
[31m-#RUN npm run build --prod[m
[31m-#[m
[31m-#FROM nginx:alpine[m
[31m-#[m
[31m-#COPY nginx.conf /etc/nginx/nginx.conf[m
[31m-#[m
[31m-#COPY --from=build-stage /app/dist/readcircle-ui /usr/share/nginx/html[m
[31m-#[m
[31m-#EXPOSE 80[m
[31m-[m
 [m
 [m
 # Frontend build stage[m
[1mdiff --git a/readcircle-ui/package-lock.json b/readcircle-ui/package-lock.json[m
[1mindex 00ebd97..488af90 100644[m
[1m--- a/readcircle-ui/package-lock.json[m
[1m+++ b/readcircle-ui/package-lock.json[m
[36m@@ -8,7 +8,7 @@[m
       "name": "readcircle-ui",[m
       "version": "0.0.0",[m
       "dependencies": {[m
[31m-        "@angular/animations": "^16.1.0",[m
[32m+[m[32m        "@angular/animations": "^16.2.12",[m
         "@angular/common": "^16.1.0",[m
         "@angular/compiler": "^16.1.0",[m
         "@angular/core": "^16.1.0",[m
[36m@@ -21,8 +21,13 @@[m
         "angular-code-input": "^2.0.0",[m
         "bootstrap": "^5.3.7",[m
         "keycloak-js": "^24.0.2",[m
[32m+[m[32m        "net": "^1.0.2",[m
         "ng-openapi-gen": "^0.53.0",[m
[32m+[m[32m        "ngx-toastr": "^19.0.0",[m
[32m+[m[32m        "quill": "^1.3.7",[m
         "rxjs": "~7.8.0",[m
[32m+[m[32m        "sockjs-client": "^1.6.1",[m
[32m+[m[32m        "stompjs": "^2.3.3",[m
         "tslib": "^2.3.0",[m
         "zone.js": "~0.13.0"[m
       },[m
[36m@@ -31,6 +36,9 @@[m
         "@angular/cli": "~16.1.4",[m
         "@angular/compiler-cli": "^16.1.0",[m
         "@types/jasmine": "~4.3.0",[m
[32m+[m[32m        "@types/node": "^20.19.11",[m
[32m+[m[32m        "@types/sockjs-client": "^1.5.4",[m
[32m+[m[32m        "@types/stompjs": "^2.3.9",[m
         "jasmine-core": 