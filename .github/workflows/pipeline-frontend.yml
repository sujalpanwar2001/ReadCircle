name: ReadCircle Frontend Pipeline

on:
  push:
    paths:
      - readcircle-ui/**
      - docker/frontend/**
      - 'docker-compose.yml'
      - .github/workflows/*-frontend.yml

jobs:
  build-image:
    name: Build Frontend Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract project version
        id: extract_version
        run: |
          cd readcircle-ui
          echo "VERSION=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT

#for arm
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2


      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: readcircle-ui
          file: docker/frontend/Dockerfile
          push: true
          platforms: linux/arm64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/bsn-ui:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/bsn-ui:${{ steps.extract_version.outputs.VERSION }}


  deploy:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: [ build-image ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "echo âœ… Connected successfully"

      - name: Create deployment folder
        run: ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "mkdir -p ci-cd"

      - name: Copy docker-compose file
        run: scp -o StrictHostKeyChecking=no docker-compose.yml ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:ci-cd/docker-compose.yml

      - name: Set ENV variable and deploy
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} <<EOF
          cd ci-cd
          sudo docker compose -f docker-compose.yml pull -q
          sudo docker compose -f docker-compose.yml up -d
          EOF

